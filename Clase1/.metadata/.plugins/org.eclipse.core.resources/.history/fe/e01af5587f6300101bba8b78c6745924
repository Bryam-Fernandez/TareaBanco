package com.tuempresa.banco.entity;



import jakarta.persistence.*;

import jakarta.validation.constraints.*;

import java.time.LocalDate;

import java.time.LocalDateTime;

import java.util.List;



@Entity
public class Cliente {
	
   @Id
   @GeneratedValue(strategy = GenerationType.IDENTITY)  
   private Long id;
   
   @NotBlank
   @Column(unique = true, nullable = false)
   private String numeroDocumento;



   @Enumerated(EnumType.STRING)
   @NotNull
   private TipoDocumento tipoDocumento;


   @NotBlank
   private String nombres;


   @NotBlank
   private String apellidos;


   @Email
   @NotBlank
   @Column(unique = true, nullable = false)
   private String email;


   @NotBlank
   private String telefono;



   @Past
   @NotNull
   private LocalDate fechaNacimiento;



   private LocalDateTime fechaRegistro;
   @Enumerated(EnumType.STRING)

   private EstadoCliente estado;



   @OneToMany(mappedBy = "cliente", cascade = CascadeType.ALL, orphanRemoval = true)

   private List<Cuenta> cuentas;



   @PrePersist

   public void prePersist() {

       this.fechaRegistro = LocalDateTime.now();

       if (this.estado == null) {

           this.estado = EstadoCliente.ACTIVO;

       }

   }



   // Getters and setters

}



**** Cuenta.java ****

package com.tuempresa.banco.entity;



import jakarta.persistence.*;

import jakarta.validation.constraints.*;

import java.math.BigDecimal;

import java.time.LocalDateTime;

import java.util.List;



@Entity

public class Cuenta {



   @Id

   @GeneratedValue(strategy = GenerationType.IDENTITY)

   private Long id;



   @Pattern(regexp = "\\d{4}-\\d{4}-\\d{4}")

   @Column(unique = true, nullable = false)

   private String numeroCuenta;



   @Enumerated(EnumType.STRING)

   private TipoCuenta tipoCuenta;



   @DecimalMin("0.00")

   private BigDecimal saldoActual;



   private LocalDateTime fechaApertura;



   private LocalDateTime fechaUltimoMovimiento;



   @Enumerated(EnumType.STRING)

   private EstadoCuenta estado;



   @ManyToOne

   @JoinColumn(name = "cliente_id")

   private Cliente cliente;



   @OneToMany(mappedBy = "cuenta", cascade = CascadeType.ALL, orphanRemoval = true)

   private List<Movimiento> movimientos;



   @PrePersist

   public void prePersist() {

       this.fechaApertura = LocalDateTime.now();

       this.fechaUltimoMovimiento = this.fechaApertura;

       if (this.estado == null) {

           this.estado = EstadoCuenta.ACTIVA;

       }

   }



   // Getters and setters

}